% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spc_chart.R
\name{spc_chart}
\alias{spc_chart}
\title{SPC Charting functionality.}
\usage{
spc_chart(
  .data,
  .base_date_range = NULL,
  .package = NULL,
  .plot_title = NULL,
  .yrange = NULL,
  .line_breaks = F,
  .chart_theme = NULL
)
}
\arguments{
\item{.data}{Data cleaned and processed within spc_output(), or data returned from spc_ouput(output = "chart").}

\item{.base_date_range}{Base date range entered into spc_output(base_date_range) or can be entered into spc_chart() the same way}

\item{.package}{Package as entered into spc_output(package) or can be entered into spc_chart() the same way ("echarts" or "plotly", only applies if mode = "interactive")}

\item{.plot_title}{Provides the plot with a title if the output is chart}

\item{.yrange}{Provides a axis range if the output is chart. Argument should be c(min,max). A count of 5 is +/- from values}

\item{.line_breaks}{Determines whether mean and process limit lines break after a rebase. Defaults to F description}

\item{.chart_theme}{Takes a list of arguements that would appear in theme arguement of}
}
\description{
The function used to output data as an SPC chart. Can be ran independently from spc_output()
}
\details{
Use this function on a spc processed data frame. Can only provide graph for one metric upon each call (doesn't support faceted charts as of yet)

append \%>\% spc_add_icons to end of chart object to add icons.
}
\examples{
#An SPC Chart

library(dplyr)

tooth_data <- force(ToothGrowth) \%>\%
  filter(supp == "VC") \%>\% slice(-15:-27) \%>\%
  mutate(Date = seq.Date(as.Date("2021-01-01"), as.Date("2021-01-17"), by = "days"),
         supp = "Indicator 1",
         polarity = "up",
         greater_than_hundred = FALSE,
         less_than_zero = FALSE,
         unit = "count")

tooth_data2 <- force(ToothGrowth) \%>\%
  filter(supp == "VC") \%>\% slice(-15:-27) \%>\%
  mutate(Date = seq.Date(as.Date("2021-01-01"), as.Date("2021-01-17"), by = "days"),
         supp = "Indicator 2",
         polarity = "up",
         greater_than_hundred = FALSE,
         less_than_zero = FALSE,
         unit = "count") \%>\%
  bind_rows(tooth_data)


# Retreive SPC data

spc_data <- spc_output(
       data = tooth_data2,
       time_field = "Date",
       indicator = "supp",
       value = "len",
       output = "data")

spc_chart(.data = filter(spc_data, indicator == "Indicator 1"),
          .package = "ggplot",
          .plot_title = "ABCD",
          .base_date_range = NULL)

spc_chart(.data = filter(spc_data, indicator == "Indicator 2"),
          .plot_title = "VC Plotly (equal axis)",
          .base_date_range = NULL,
          .package = "plotly",
          .yrange = c(min(c(spc_data$value, spc_data$Target,
                            spc_data$upper_ci, spc_data$lower_ci),
                            na.rm = TRUE),
                      max(c(spc_data$value, spc_data$Target,
                            spc_data$upper_ci, spc_data$lower_ci),
                            na.rm = TRUE)))



}
